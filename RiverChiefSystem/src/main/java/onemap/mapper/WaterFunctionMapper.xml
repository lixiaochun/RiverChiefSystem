<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- INLAND_WATER_QUALITY -->
<mapper namespace="onemap.mapper.WaterFunctionMapper">
    
    <!-- 表所有字段 -->
    <sql id="allColumns">
        WATER_FUNCTION_ID, NAME, SECTION_LEVEL, MONITOR_TYPE, REGION_ID, RIVER_ID, 
        LONGITUTE, LATITUDE, REQUIREMENT, BASE_INFO_TYPE, POLLUTION_INDEX, IMGURL, 
        MODEL, REMARK, WARNING
    </sql>
    
    <!-- 根据code、regionId、riverId查询点坐标数据 -->
    <select id="findWaterFunctionAll" resultType="map" parameterType="map">
        SELECT
        WATER_FUNCTION_ID as id,LONGITUTE as x, LATITUDE as y,warning as warn
        FROM WATER_FUNCTION WHERE 1=1
        <if test="code != null and code != 0">
            AND BASE_INFO_TYPE LIKE CONCAT( #{code},'%')
        </if>
        <if test="regionId != null and regionId != ''">
            AND REGION_ID LIKE CONCAT( #{regionId},'%')
        </if>
        <if test="riverId != null and riverId != ''">
            AND RIVER_ID LIKE CONCAT( #{riverId},'%')
        </if>
    </select>
    
	<!-- 根据id查询详细数据 -->
    <select id="findWaterFunctionById" resultType="map" parameterType="int">
        SELECT  *,CONCAT( LONGITUTE,',',LATITUDE) as point,
        (SELECT value FROM base_info_type WHERE base_info_type.code=WATER_FUNCTION.requirement) AS requirement_name,
		(SELECT value FROM base_info_type WHERE base_info_type.code=WATER_FUNCTION.base_info_type) AS type_name,
        (SELECT region_name FROM region WHERE region.region_id=WATER_FUNCTION.REGION_ID) AS region_name,
		(SELECT river_name FROM river WHERE river.river_id=WATER_FUNCTION.river_id) AS river_name
        FROM WATER_FUNCTION WHERE WATER_FUNCTION_ID = #{waterFunctionId}
    </select>
    
    <!-- 根据code、regionId分页查询详细数据列表 -->
    <select id="findWaterFunctionByPage" resultType="map" parameterType="map">
        SELECT  *,WATER_FUNCTION_ID as id,
        (SELECT value FROM base_info_type WHERE base_info_type.code=WATER_FUNCTION.requirement) AS requirement_name,
		(SELECT value FROM base_info_type WHERE base_info_type.code=WATER_FUNCTION.base_info_type) AS type_name,
        (SELECT region_name FROM region WHERE region.region_id=WATER_FUNCTION.REGION_ID) AS region_name,
		(SELECT river_name FROM river WHERE river.river_id=WATER_FUNCTION.river_id) AS river_name
        FROM WATER_FUNCTION WHERE 1=1
        <if test="code != null and code != 0">
            AND BASE_INFO_TYPE LIKE CONCAT( #{code},'%')
        </if>
        <if test="regionId != null and regionId != ''">
            AND REGION_ID LIKE CONCAT( #{regionId},'%')
        </if>
        LIMIT ${curPage},${pageNumber}
    </select>
    
    <!-- 获取分页查询详情 count总数 page总页数-->
    <select id="getPagingInformation" resultType="map" parameterType="map">
		SELECT COUNT(*) AS count,CEILING(COUNT(*)/${pageNumber}) AS page FROM WATER_FUNCTION WHERE 1=1
        <if test="regionId != null and regionId != ''">
            AND REGION_ID LIKE CONCAT( #{regionId},'%')
        </if>
	</select>
    
    <select id="findMaxId" resultType="int" parameterType="int">
        SELECT IFNULL(max(WATER_FUNCTION_ID),0) from WATER_FUNCTION
    </select>   
       
    <!-- 插入数据 -->
    <insert id="insertWaterFunction" parameterType="map">
        INSERT INTO WATER_FUNCTION (<include refid="allColumns" />)
        VALUES (
            #{id},
            #{name},
            #{sectionLevel},
            #{monitorType},
            #{regionId},
            #{riverId},
            #{longitute},
            #{latitude},
            #{requirement},
            #{baseInfoType},
            #{pollutionIndex},
            #{imgurl},
            #{model},
            #{remark},
            #{warning}
        )
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateWaterFunction" parameterType="map">
        UPDATE WATER_FUNCTION SET
            NAME = #{name},
            SECTION_LEVEL = #{sectionLevel},
            MONITOR_TYPE = #{monitorType},
            REGION_ID = #{regionId},
            RIVER_ID = #{riverId},
            LONGITUTE = #{longitute},
            LATITUDE = #{latitude},
            REQUIREMENT = #{requirement},
            BASE_INFO_TYPE = #{baseInfoType},
            POLLUTION_INDEX = #{pollutionIndex},
            IMGURL = #{imgurl},
            MODEL = #{model},
            REMARK = #{remark},
            WARNING = #{warning}
        WHERE WATER_FUNCTION_ID = #{id}
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteWaterFunctionById" parameterType="int">
        DELETE FROM WATER_FUNCTION WHERE WATER_FUNCTION_ID = #{waterFunctionId}
    </delete>
    
</mapper>